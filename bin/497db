#!/bin/bash
# 497db

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}


if [ $# -ne 1 ]; then
  usage
  exit 1
fi


# Parse argument.  $1 is the first argument
case $1 in
  "create")
    # check if the database already exists
    if [ -f var/Internship.sqlite3 ]; then
      echo "Error: database already exists"
      exit 1
    fi
    # Create the database
    mkdir -p var/uploads
    sqlite3 var/Internship.sqlite3 < sql/schema.sql
    sqlite3 var/Internship.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
    ;;


  "destroy")
    # check if database doesn't exists
    rm -rf var/Internship.sqlite3 
    ;;


  "reset")

    # Destroy the database
    rm -rf var/Internship.sqlite3 
    sqlite3 var/Internship.sqlite3 < sql/schema.sql
    sqlite3 var/Internship.sqlite3 < sql/data.sql
    ;;


  "dump")
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM jobs'
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM archive'
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM subscribers'
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM reviews'
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM ratings'
    sqlite3 -batch -line var/Internship.sqlite3 'SELECT * FROM users'
    ;;
  *)
    usage
    exit 1
    ;;
esac
